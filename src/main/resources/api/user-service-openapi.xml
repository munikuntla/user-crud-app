openapi: 3.0.3
info:
  title: User Service - OpenAPI 3.0
  description: API to support CRUD operations on User entity
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
    description: Local development server

paths:
  /users:
    get:
      summary: Get all users
      operationId: getAllUsers
      tags:
        - users
      responses:
        '200':
          description: List of users successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      operationId: createUser
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: User successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid user data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        description: User ID
    get:
      summary: Get a user by ID
      operationId: getUserById
      tags:
        - users
      responses:
        '200':
          description: User successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update an existing user
      operationId: updateUser
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: User successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Invalid user data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a user
      operationId: deleteUser
      tags:
        - users
      responses:
        '204':
          description: User successfully deleted
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Sai Munikuntla
        email:
          type: string
          format: email
          example: sai.munikuntla@email-domain.com
        age:
          type: integer
          minimum: 0
          maximum: 120
          example: 30
      required:
        - id
        - name
        - email
        - age
    
    UserRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 100
          example: Sai Munikuntla
        email:
          type: string
          format: email
          example: sai.munikuntla@email-domain.com
        age:
          type: integer
          minimum: 0
          maximum: 120
          example: 30
      required:
        - name
        - email
        - age
    
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2023-01-01T12:00:00Z"
        status:
          type: integer
          example: 404
        error:
          type: string
          example: "Not Found"
        message:
          type: string
          example: "User with ID 1 not found"
        path:
          type: string
          example: "/api/users/1"